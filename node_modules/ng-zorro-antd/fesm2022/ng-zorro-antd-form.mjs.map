{"version":3,"file":"ng-zorro-antd-form.mjs","sources":["../../components/form/form-item.component.ts","../../components/form/form.directive.ts","../../components/form/form-control.component.ts","../../components/form/form-label.component.ts","../../components/form/form-split.component.ts","../../components/form/form-text.component.ts","../../components/form/form.module.ts","../../components/form/public-api.ts","../../components/form/ng-zorro-antd-form.ts"],"sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nexport type NzFormControlStatusType = 'success' | 'error' | 'warning' | 'validating' | '';\n\n/** should add nz-row directive to host, track https://github.com/angular/angular/issues/8785 **/\n@Component({\n  selector: 'nz-form-item',\n  exportAs: 'nzFormItem',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    class: 'ant-form-item',\n    '[class.ant-form-item-has-success]': 'status === \"success\"',\n    '[class.ant-form-item-has-warning]': 'status === \"warning\"',\n    '[class.ant-form-item-has-error]': 'status === \"error\"',\n    '[class.ant-form-item-is-validating]': 'status === \"validating\"',\n    '[class.ant-form-item-has-feedback]': 'hasFeedback && status',\n    '[class.ant-form-item-with-help]': 'withHelpClass'\n  },\n  template: ` <ng-content></ng-content> `,\n  standalone: true\n})\nexport class NzFormItemComponent implements OnDestroy, OnDestroy {\n  status: NzFormControlStatusType = '';\n  hasFeedback = false;\n  withHelpClass = false;\n\n  private destroy$ = new Subject<boolean>();\n\n  setWithHelpViaTips(value: boolean): void {\n    this.withHelpClass = value;\n    this.cdr.markForCheck();\n  }\n\n  setStatus(status: NzFormControlStatusType): void {\n    this.status = status;\n    this.cdr.markForCheck();\n  }\n\n  setHasFeedback(hasFeedback: boolean): void {\n    this.hasFeedback = hasFeedback;\n    this.cdr.markForCheck();\n  }\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { Directive, Input, OnChanges, OnDestroy, SimpleChange, SimpleChanges, booleanAttribute } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter, map, takeUntil } from 'rxjs/operators';\n\nimport { ThemeType } from '@ant-design/icons-angular';\n\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { InputObservable } from 'ng-zorro-antd/core/types';\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'form';\n\nexport type NzFormLayoutType = 'horizontal' | 'vertical' | 'inline';\n\nexport type NzLabelAlignType = 'left' | 'right';\n\nexport const DefaultTooltipIcon = {\n  type: 'question-circle',\n  theme: 'outline'\n} as const;\n\n@Directive({\n  selector: '[nz-form]',\n  exportAs: 'nzForm',\n  host: {\n    class: 'ant-form',\n    '[class.ant-form-horizontal]': `nzLayout === 'horizontal'`,\n    '[class.ant-form-vertical]': `nzLayout === 'vertical'`,\n    '[class.ant-form-inline]': `nzLayout === 'inline'`,\n    '[class.ant-form-rtl]': `dir === 'rtl'`\n  },\n  standalone: true\n})\nexport class NzFormDirective implements OnChanges, OnDestroy, InputObservable {\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\n\n  @Input() nzLayout: NzFormLayoutType = 'horizontal';\n  @Input({ transform: booleanAttribute }) @WithConfig() nzNoColon: boolean = false;\n  @Input() @WithConfig() nzAutoTips: Record<string, Record<string, string>> = {};\n  @Input({ transform: booleanAttribute }) nzDisableAutoTips = false;\n  @Input() @WithConfig() nzTooltipIcon: string | { type: string; theme: ThemeType } = DefaultTooltipIcon;\n  @Input() nzLabelAlign: NzLabelAlignType = 'right';\n  @Input({ transform: booleanAttribute }) @WithConfig() nzLabelWrap: boolean = false;\n\n  dir: Direction = 'ltr';\n  destroy$ = new Subject<boolean>();\n  private inputChanges$ = new Subject<SimpleChanges>();\n\n  getInputObservable<K extends keyof this>(changeType: K): Observable<SimpleChange> {\n    return this.inputChanges$.pipe(\n      filter(changes => changeType in changes),\n      map(value => value[changeType as string])\n    );\n  }\n\n  constructor(\n    public nzConfigService: NzConfigService,\n    private directionality: Directionality\n  ) {\n    this.dir = this.directionality.value;\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.inputChanges$.next(changes);\n  }\n\n  ngOnDestroy(): void {\n    this.inputChanges$.complete();\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NgClass } from '@angular/common';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation,\n  booleanAttribute,\n  inject\n} from '@angular/core';\nimport { AbstractControl, FormControlDirective, FormControlName, NgControl, NgModel } from '@angular/forms';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { filter, startWith, takeUntil, tap } from 'rxjs/operators';\n\nimport { helpMotion } from 'ng-zorro-antd/core/animation';\nimport { NzFormStatusService } from 'ng-zorro-antd/core/form';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { toBoolean } from 'ng-zorro-antd/core/util';\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\n\nimport { NzFormControlStatusType, NzFormItemComponent } from './form-item.component';\nimport { NzFormDirective } from './form.directive';\n\n@Component({\n  selector: 'nz-form-control',\n  exportAs: 'nzFormControl',\n  preserveWhitespaces: false,\n  animations: [helpMotion],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"ant-form-item-control-input\">\n      <div class=\"ant-form-item-control-input-content\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n    @if (innerTip) {\n      <div @helpMotion class=\"ant-form-item-explain ant-form-item-explain-connected\">\n        <div role=\"alert\" [ngClass]=\"['ant-form-item-explain-' + status]\">\n          <ng-container *nzStringTemplateOutlet=\"innerTip; context: { $implicit: validateControl }\">{{\n            innerTip\n          }}</ng-container>\n        </div>\n      </div>\n    }\n\n    @if (nzExtra) {\n      <div class=\"ant-form-item-extra\">\n        <ng-container *nzStringTemplateOutlet=\"nzExtra\">{{ nzExtra }}</ng-container>\n      </div>\n    }\n  `,\n  providers: [NzFormStatusService],\n  host: {\n    class: 'ant-form-item-control'\n  },\n  imports: [NgClass, NzOutletModule],\n  standalone: true\n})\nexport class NzFormControlComponent implements OnChanges, OnDestroy, OnInit, AfterContentInit, OnDestroy {\n  private _hasFeedback = false;\n  private validateChanges: Subscription = Subscription.EMPTY;\n  private validateString: string | null = null;\n  private destroyed$ = new Subject<void>();\n  private localeId!: string;\n  private autoErrorTip?: string;\n\n  private get disableAutoTips(): boolean {\n    return this.nzDisableAutoTips !== undefined\n      ? toBoolean(this.nzDisableAutoTips)\n      : !!this.nzFormDirective?.nzDisableAutoTips;\n  }\n\n  status: NzFormControlStatusType = '';\n  validateControl: AbstractControl | NgModel | null = null;\n  innerTip: string | TemplateRef<{ $implicit: AbstractControl | NgModel }> | null = null;\n\n  @ContentChild(NgControl, { static: false }) defaultValidateControl?: FormControlName | FormControlDirective;\n  @Input() nzSuccessTip?: string | TemplateRef<{ $implicit: AbstractControl | NgModel }>;\n  @Input() nzWarningTip?: string | TemplateRef<{ $implicit: AbstractControl | NgModel }>;\n  @Input() nzErrorTip?: string | TemplateRef<{ $implicit: AbstractControl | NgModel }>;\n  @Input() nzValidatingTip?: string | TemplateRef<{ $implicit: AbstractControl | NgModel }>;\n  @Input() nzExtra?: string | TemplateRef<void>;\n  @Input() nzAutoTips: Record<string, Record<string, string>> = {};\n  @Input({ transform: booleanAttribute }) nzDisableAutoTips?: boolean;\n\n  @Input({ transform: booleanAttribute })\n  set nzHasFeedback(value: boolean) {\n    this._hasFeedback = value;\n    this.nzFormStatusService.formStatusChanges.next({ status: this.status, hasFeedback: this._hasFeedback });\n    if (this.nzFormItemComponent) {\n      this.nzFormItemComponent.setHasFeedback(this._hasFeedback);\n    }\n  }\n\n  get nzHasFeedback(): boolean {\n    return this._hasFeedback;\n  }\n\n  @Input()\n  set nzValidateStatus(value: string | AbstractControl | FormControlName | NgModel) {\n    if (value instanceof AbstractControl || value instanceof NgModel) {\n      this.validateControl = value;\n      this.validateString = null;\n      this.watchControl();\n    } else if (value instanceof FormControlName) {\n      this.validateControl = value.control;\n      this.validateString = null;\n      this.watchControl();\n    } else {\n      this.validateString = value;\n      this.validateControl = null;\n      this.setStatus();\n    }\n  }\n\n  private watchControl(): void {\n    this.validateChanges.unsubscribe();\n    /** miss detect https://github.com/angular/angular/issues/10887 **/\n    if (this.validateControl && this.validateControl.statusChanges) {\n      this.validateChanges = (this.validateControl.statusChanges as Observable<NzSafeAny>)\n        .pipe(startWith(null), takeUntil(this.destroyed$))\n        .subscribe(() => {\n          if (!this.disableAutoTips) {\n            this.updateAutoErrorTip();\n          }\n          this.setStatus();\n          this.cdr.markForCheck();\n        });\n    }\n  }\n\n  private setStatus(): void {\n    this.status = this.getControlStatus(this.validateString);\n    this.innerTip = this.getInnerTip(this.status);\n    this.nzFormStatusService.formStatusChanges.next({ status: this.status, hasFeedback: this.nzHasFeedback });\n    if (this.nzFormItemComponent) {\n      this.nzFormItemComponent.setWithHelpViaTips(!!this.innerTip);\n      this.nzFormItemComponent.setStatus(this.status);\n    }\n  }\n\n  private getControlStatus(validateString: string | null): NzFormControlStatusType {\n    let status: NzFormControlStatusType;\n\n    if (validateString === 'warning' || this.validateControlStatus('INVALID', 'warning')) {\n      status = 'warning';\n    } else if (validateString === 'error' || this.validateControlStatus('INVALID')) {\n      status = 'error';\n    } else if (\n      validateString === 'validating' ||\n      validateString === 'pending' ||\n      this.validateControlStatus('PENDING')\n    ) {\n      status = 'validating';\n    } else if (validateString === 'success' || this.validateControlStatus('VALID')) {\n      status = 'success';\n    } else {\n      status = '';\n    }\n\n    return status;\n  }\n\n  private validateControlStatus(validStatus: string, statusType?: NzFormControlStatusType): boolean {\n    if (!this.validateControl) {\n      return false;\n    } else {\n      const { dirty, touched, status } = this.validateControl;\n      return (\n        (!!dirty || !!touched) && (statusType ? this.validateControl.hasError(statusType) : status === validStatus)\n      );\n    }\n  }\n\n  private getInnerTip(\n    status: NzFormControlStatusType\n  ): string | TemplateRef<{ $implicit: AbstractControl | NgModel }> | null {\n    switch (status) {\n      case 'error':\n        return (!this.disableAutoTips && this.autoErrorTip) || this.nzErrorTip || null;\n      case 'validating':\n        return this.nzValidatingTip || null;\n      case 'success':\n        return this.nzSuccessTip || null;\n      case 'warning':\n        return this.nzWarningTip || null;\n      default:\n        return null;\n    }\n  }\n\n  private updateAutoErrorTip(): void {\n    if (this.validateControl) {\n      const errors = this.validateControl.errors || {};\n      let autoErrorTip = '';\n      for (const key in errors) {\n        if (errors.hasOwnProperty(key)) {\n          autoErrorTip =\n            errors[key]?.[this.localeId] ??\n            this.nzAutoTips?.[this.localeId]?.[key] ??\n            this.nzAutoTips.default?.[key] ??\n            this.nzFormDirective?.nzAutoTips?.[this.localeId]?.[key] ??\n            this.nzFormDirective?.nzAutoTips.default?.[key];\n        }\n        if (!!autoErrorTip) {\n          break;\n        }\n      }\n      this.autoErrorTip = autoErrorTip;\n    }\n  }\n\n  private subscribeAutoTips(observable?: Observable<NzSafeAny>): void {\n    observable?.pipe(takeUntil(this.destroyed$)).subscribe(() => {\n      if (!this.disableAutoTips) {\n        this.updateAutoErrorTip();\n        this.setStatus();\n        this.cdr.markForCheck();\n      }\n    });\n  }\n\n  private nzFormItemComponent = inject(NzFormItemComponent, { host: true, optional: true });\n  private nzFormDirective = inject(NzFormDirective, { optional: true });\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    i18n: NzI18nService,\n    private nzFormStatusService: NzFormStatusService\n  ) {\n    this.subscribeAutoTips(i18n.localeChange.pipe(tap(locale => (this.localeId = locale.locale))));\n    this.subscribeAutoTips(this.nzFormDirective?.getInputObservable('nzAutoTips'));\n    this.subscribeAutoTips(\n      this.nzFormDirective\n        ?.getInputObservable('nzDisableAutoTips')\n        .pipe(filter(() => this.nzDisableAutoTips === undefined))\n    );\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzDisableAutoTips, nzAutoTips, nzSuccessTip, nzWarningTip, nzErrorTip, nzValidatingTip } = changes;\n\n    if (nzDisableAutoTips || nzAutoTips) {\n      this.updateAutoErrorTip();\n      this.setStatus();\n    } else if (nzSuccessTip || nzWarningTip || nzErrorTip || nzValidatingTip) {\n      this.setStatus();\n    }\n  }\n\n  ngOnInit(): void {\n    this.setStatus();\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  ngAfterContentInit(): void {\n    if (!this.validateControl && !this.validateString) {\n      if (this.defaultValidateControl instanceof FormControlDirective) {\n        this.nzValidateStatus = this.defaultValidateControl.control;\n      } else {\n        this.nzValidateStatus = this.defaultValidateControl!;\n      }\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnDestroy,\n  ViewEncapsulation,\n  booleanAttribute,\n  inject\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\n\nimport { ThemeType } from '@ant-design/icons-angular';\n\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzTSType } from 'ng-zorro-antd/core/types';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzTooltipDirective } from 'ng-zorro-antd/tooltip';\n\nimport { DefaultTooltipIcon, NzFormDirective, NzLabelAlignType } from './form.directive';\n\nexport interface NzFormTooltipIcon {\n  type: NzTSType;\n  theme: ThemeType;\n}\n\nfunction toTooltipIcon(value: string | NzFormTooltipIcon): Required<NzFormTooltipIcon> {\n  const icon = typeof value === 'string' ? { type: value } : value;\n  return { ...DefaultTooltipIcon, ...icon };\n}\n\n@Component({\n  selector: 'nz-form-label',\n  exportAs: 'nzFormLabel',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <label [attr.for]=\"nzFor\" [class.ant-form-item-no-colon]=\"nzNoColon\" [class.ant-form-item-required]=\"nzRequired\">\n      <ng-content></ng-content>\n      @if (nzTooltipTitle) {\n        <span class=\"ant-form-item-tooltip\" nz-tooltip [nzTooltipTitle]=\"nzTooltipTitle\">\n          <ng-container *nzStringTemplateOutlet=\"tooltipIcon.type; let tooltipIconType\">\n            <span nz-icon [nzType]=\"tooltipIconType\" [nzTheme]=\"tooltipIcon.theme\"></span>\n          </ng-container>\n        </span>\n      }\n    </label>\n  `,\n  host: {\n    class: 'ant-form-item-label',\n    '[class.ant-form-item-label-left]': `nzLabelAlign === 'left'`,\n    '[class.ant-form-item-label-wrap]': `nzLabelWrap`\n  },\n  imports: [NzOutletModule, NzTooltipDirective, NzIconModule],\n  standalone: true\n})\nexport class NzFormLabelComponent implements OnDestroy {\n  @Input() nzFor?: string;\n  @Input({ transform: booleanAttribute }) nzRequired = false;\n  @Input({ transform: booleanAttribute })\n  set nzNoColon(value: boolean) {\n    this.noColon = value;\n  }\n  get nzNoColon(): boolean {\n    return this.noColon !== 'default' ? this.noColon : !!this.nzFormDirective?.nzNoColon;\n  }\n\n  private noColon: boolean | 'default' = 'default';\n\n  @Input() nzTooltipTitle?: NzTSType;\n  @Input()\n  set nzTooltipIcon(value: string | NzFormTooltipIcon) {\n    this._tooltipIcon = toTooltipIcon(value);\n  }\n  // due to 'get' and 'set' accessor must have the same type, so it was renamed to `tooltipIcon`\n  get tooltipIcon(): NzFormTooltipIcon {\n    return this._tooltipIcon !== 'default'\n      ? this._tooltipIcon\n      : toTooltipIcon(this.nzFormDirective?.nzTooltipIcon || DefaultTooltipIcon);\n  }\n  private _tooltipIcon: NzFormTooltipIcon | 'default' = 'default';\n\n  @Input()\n  set nzLabelAlign(value: NzLabelAlignType) {\n    this.labelAlign = value;\n  }\n\n  get nzLabelAlign(): NzLabelAlignType {\n    return this.labelAlign !== 'default' ? this.labelAlign : this.nzFormDirective?.nzLabelAlign || 'right';\n  }\n\n  private labelAlign: NzLabelAlignType | 'default' = 'default';\n\n  @Input({ transform: booleanAttribute })\n  set nzLabelWrap(value: boolean) {\n    this.labelWrap = value;\n  }\n\n  get nzLabelWrap(): boolean {\n    return this.labelWrap !== 'default' ? this.labelWrap : !!this.nzFormDirective?.nzLabelWrap;\n  }\n\n  private labelWrap: boolean | 'default' = 'default';\n\n  private destroy$ = new Subject<boolean>();\n\n  private nzFormDirective = inject(NzFormDirective, { skipSelf: true, optional: true });\n\n  constructor(private cdr: ChangeDetectorRef) {\n    if (this.nzFormDirective) {\n      this.nzFormDirective\n        .getInputObservable('nzNoColon')\n        .pipe(\n          filter(() => this.noColon === 'default'),\n          takeUntil(this.destroy$)\n        )\n        .subscribe(() => this.cdr.markForCheck());\n\n      this.nzFormDirective\n        .getInputObservable('nzTooltipIcon')\n        .pipe(\n          filter(() => this._tooltipIcon === 'default'),\n          takeUntil(this.destroy$)\n        )\n        .subscribe(() => this.cdr.markForCheck());\n\n      this.nzFormDirective\n        .getInputObservable('nzLabelAlign')\n        .pipe(\n          filter(() => this.labelAlign === 'default'),\n          takeUntil(this.destroy$)\n        )\n        .subscribe(() => this.cdr.markForCheck());\n\n      this.nzFormDirective\n        .getInputObservable('nzLabelWrap')\n        .pipe(\n          filter(() => this.labelWrap === 'default'),\n          takeUntil(this.destroy$)\n        )\n        .subscribe(() => this.cdr.markForCheck());\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'nz-form-split',\n  exportAs: 'nzFormSplit',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: ` <ng-content></ng-content> `,\n  host: {\n    class: 'ant-form-split'\n  },\n  standalone: true\n})\nexport class NzFormSplitComponent {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'nz-form-text',\n  exportAs: 'nzFormText',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: ` <ng-content></ng-content> `,\n  host: {\n    class: 'ant-form-text'\n  },\n  standalone: true\n})\nexport class NzFormTextComponent {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NgModule } from '@angular/core';\n\nimport { NzGridModule } from 'ng-zorro-antd/grid';\n\nimport { NzFormControlComponent } from './form-control.component';\nimport { NzFormItemComponent } from './form-item.component';\nimport { NzFormLabelComponent } from './form-label.component';\nimport { NzFormSplitComponent } from './form-split.component';\nimport { NzFormTextComponent } from './form-text.component';\nimport { NzFormDirective } from './form.directive';\n\n@NgModule({\n  imports: [\n    NzFormDirective,\n    NzFormItemComponent,\n    NzFormLabelComponent,\n    NzFormControlComponent,\n    NzFormTextComponent,\n    NzFormSplitComponent\n  ],\n  exports: [\n    NzGridModule,\n    NzFormDirective,\n    NzFormItemComponent,\n    NzFormLabelComponent,\n    NzFormControlComponent,\n    NzFormTextComponent,\n    NzFormSplitComponent\n  ]\n})\nexport class NzFormModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './form.module';\nexport * from './form.directive';\nexport * from './form-item.component';\nexport * from './form-label.component';\nexport * from './form-control.component';\nexport * from './form-text.component';\nexport * from './form-split.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2"],"mappings":"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"}