{"version":3,"file":"ng-zorro-antd-icon.mjs","sources":["../../components/icon/icons.ts","../../components/icon/icon.service.ts","../../components/icon/icon.directive.ts","../../components/icon/provide-icons.ts","../../components/icon/icon.module.ts","../../components/icon/public-api.ts","../../components/icon/ng-zorro-antd-icon.ts"],"sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { IconDefinition } from '@ant-design/icons-angular';\nimport {\n  BarsOutline,\n  CalendarOutline,\n  CaretDownFill,\n  CaretDownOutline,\n  CaretUpFill,\n  CaretUpOutline,\n  CheckCircleFill,\n  CheckCircleOutline,\n  CheckOutline,\n  ClockCircleOutline,\n  CloseCircleFill,\n  CloseCircleOutline,\n  CloseOutline,\n  CopyOutline,\n  DeleteOutline,\n  DoubleLeftOutline,\n  DoubleRightOutline,\n  DownOutline,\n  EditOutline,\n  EllipsisOutline,\n  ExclamationCircleFill,\n  ExclamationCircleOutline,\n  EyeOutline,\n  FileFill,\n  FileOutline,\n  FilterFill,\n  InfoCircleFill,\n  InfoCircleOutline,\n  LeftOutline,\n  LoadingOutline,\n  PaperClipOutline,\n  QuestionCircleOutline,\n  RightOutline,\n  RotateLeftOutline,\n  RotateRightOutline,\n  SearchOutline,\n  StarFill,\n  SwapOutline,\n  SwapRightOutline,\n  UploadOutline,\n  UpOutline,\n  VerticalAlignTopOutline,\n  ZoomInOutline,\n  ZoomOutOutline\n} from '@ant-design/icons-angular/icons';\n\nexport const NZ_ICONS_USED_BY_ZORRO: IconDefinition[] = [\n  BarsOutline,\n  CalendarOutline,\n  CaretUpFill,\n  CaretUpOutline,\n  CaretDownFill,\n  CaretDownOutline,\n  CheckCircleFill,\n  CheckCircleOutline,\n  CheckOutline,\n  ClockCircleOutline,\n  CloseCircleOutline,\n  CloseCircleFill,\n  CloseOutline,\n  CopyOutline,\n  DeleteOutline,\n  DoubleLeftOutline,\n  DoubleRightOutline,\n  DownOutline,\n  EditOutline,\n  EllipsisOutline,\n  ExclamationCircleFill,\n  ExclamationCircleOutline,\n  EyeOutline,\n  FileFill,\n  FileOutline,\n  FilterFill,\n  InfoCircleFill,\n  InfoCircleOutline,\n  LeftOutline,\n  LoadingOutline,\n  PaperClipOutline,\n  QuestionCircleOutline,\n  RightOutline,\n  RotateRightOutline,\n  RotateLeftOutline,\n  StarFill,\n  SearchOutline,\n  StarFill,\n  UploadOutline,\n  VerticalAlignTopOutline,\n  UpOutline,\n  SwapOutline,\n  SwapRightOutline,\n  ZoomInOutline,\n  ZoomOutOutline\n];\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { HttpBackend } from '@angular/common/http';\nimport { Injectable, InjectionToken, OnDestroy, RendererFactory2, inject } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { IconDefinition, IconService } from '@ant-design/icons-angular';\n\nimport { IconConfig, NzConfigService } from 'ng-zorro-antd/core/config';\nimport { warn } from 'ng-zorro-antd/core/logger';\n\nimport { NZ_ICONS_USED_BY_ZORRO } from './icons';\n\nexport interface NzIconfontOption {\n  scriptUrl: string;\n}\n\nexport const NZ_ICONS = new InjectionToken<IconDefinition[]>('nz_icons');\nexport const NZ_ICON_DEFAULT_TWOTONE_COLOR = new InjectionToken('nz_icon_default_twotone_color');\nexport const DEFAULT_TWOTONE_COLOR = '#1890ff';\n\n/**\n * It should be a global singleton, otherwise registered icons could not be found.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NzIconService extends IconService implements OnDestroy {\n  configUpdated$ = new Subject<void>();\n\n  protected override get _disableDynamicLoading(): boolean {\n    return !this.platform.isBrowser;\n  }\n\n  private iconfontCache = new Set<string>();\n  private subscription: Subscription | null = null;\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = null;\n    }\n  }\n\n  normalizeSvgElement(svg: SVGElement): void {\n    if (!svg.getAttribute('viewBox')) {\n      this._renderer.setAttribute(svg, 'viewBox', '0 0 1024 1024');\n    }\n    if (!svg.getAttribute('width') || !svg.getAttribute('height')) {\n      this._renderer.setAttribute(svg, 'width', '1em');\n      this._renderer.setAttribute(svg, 'height', '1em');\n    }\n    if (!svg.getAttribute('fill')) {\n      this._renderer.setAttribute(svg, 'fill', 'currentColor');\n    }\n  }\n\n  fetchFromIconfont(opt: NzIconfontOption): void {\n    const { scriptUrl } = opt;\n    if (this._document && !this.iconfontCache.has(scriptUrl)) {\n      const script = this._renderer.createElement('script');\n      this._renderer.setAttribute(script, 'src', scriptUrl);\n      this._renderer.setAttribute(script, 'data-namespace', scriptUrl.replace(/^(https?|http):/g, ''));\n      this._renderer.appendChild(this._document.body, script);\n      this.iconfontCache.add(scriptUrl);\n    }\n  }\n\n  createIconfontIcon(type: string): SVGElement {\n    return this._createSVGElementFromString(`<svg><use xlink:href=\"${type}\"></svg>`);\n  }\n\n  constructor(\n    rendererFactory: RendererFactory2,\n    sanitizer: DomSanitizer,\n    protected nzConfigService: NzConfigService,\n    private platform: Platform\n  ) {\n    super(\n      rendererFactory,\n      inject(HttpBackend, { optional: true }) as HttpBackend, // TODO: fix the type\n      inject(DOCUMENT),\n      sanitizer,\n      [...NZ_ICONS_USED_BY_ZORRO, ...(inject(NZ_ICONS, { optional: true }) || [])]\n    );\n\n    this.onConfigChange();\n    this.configDefaultTwotoneColor();\n    this.configDefaultTheme();\n  }\n\n  private onConfigChange(): void {\n    this.subscription = this.nzConfigService.getConfigChangeEventForComponent('icon').subscribe(() => {\n      this.configDefaultTwotoneColor();\n      this.configDefaultTheme();\n      this.configUpdated$.next();\n    });\n  }\n\n  private configDefaultTheme(): void {\n    const iconConfig = this.getConfig();\n    this.defaultTheme = iconConfig.nzTheme || 'outline';\n  }\n\n  private configDefaultTwotoneColor(): void {\n    const iconConfig = this.getConfig();\n    const defaultTwotoneColor = iconConfig.nzTwotoneColor || DEFAULT_TWOTONE_COLOR;\n\n    let primaryColor = DEFAULT_TWOTONE_COLOR;\n\n    if (defaultTwotoneColor) {\n      if (defaultTwotoneColor.startsWith('#')) {\n        primaryColor = defaultTwotoneColor;\n      } else {\n        warn('Twotone color must be a hex color!');\n      }\n    }\n\n    this.twoToneColor = { primaryColor };\n  }\n\n  private getConfig(): IconConfig {\n    return this.nzConfigService.getConfigForComponent('icon') || {};\n  }\n}\n\nexport const NZ_ICONS_PATCH = new InjectionToken<IconDefinition[]>('nz_icons_patch');\n\n@Injectable()\nexport class NzIconPatchService {\n  patched = false;\n  private extraIcons = inject(NZ_ICONS_PATCH, { self: true });\n\n  constructor(private rootIconService: NzIconService) {}\n\n  doPatch(): void {\n    if (this.patched) {\n      return;\n    }\n\n    this.extraIcons.forEach(iconDefinition => this.rootIconService.addIcon(iconDefinition));\n    this.patched = true;\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  AfterContentChecked,\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  SimpleChanges,\n  booleanAttribute,\n  inject,\n  numberAttribute\n} from '@angular/core';\nimport { Subject, from } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { IconDirective, ThemeType } from '@ant-design/icons-angular';\n\nimport { warn } from 'ng-zorro-antd/core/logger';\n\nimport { NzIconPatchService, NzIconService } from './icon.service';\n\n@Directive({\n  selector: '[nz-icon]',\n  exportAs: 'nzIcon',\n  host: {\n    '[class.anticon]': 'true'\n  },\n  standalone: true\n})\nexport class NzIconDirective extends IconDirective implements OnInit, OnChanges, AfterContentChecked, OnDestroy {\n  cacheClassName: string | null = null;\n  @Input({ transform: booleanAttribute })\n  set nzSpin(value: boolean) {\n    this.spin = value;\n  }\n\n  @Input({ transform: numberAttribute }) nzRotate: number = 0;\n\n  @Input()\n  set nzType(value: string) {\n    this.type = value;\n  }\n\n  @Input()\n  set nzTheme(value: ThemeType) {\n    this.theme = value;\n  }\n\n  @Input()\n  set nzTwotoneColor(value: string) {\n    this.twoToneColor = value;\n  }\n\n  @Input()\n  set nzIconfont(value: string) {\n    this.iconfont = value;\n  }\n\n  hostClass?: string;\n\n  private readonly el: HTMLElement;\n  private iconfont?: string;\n  private spin: boolean = false;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private readonly ngZone: NgZone,\n    private readonly changeDetectorRef: ChangeDetectorRef,\n    elementRef: ElementRef,\n    public readonly iconService: NzIconService,\n    public readonly renderer: Renderer2\n  ) {\n    super(iconService, elementRef, renderer);\n\n    const iconPatch = inject(NzIconPatchService, { optional: true });\n    if (iconPatch) {\n      iconPatch.doPatch();\n    }\n\n    this.el = elementRef.nativeElement;\n  }\n\n  override ngOnChanges(changes: SimpleChanges): void {\n    const { nzType, nzTwotoneColor, nzSpin, nzTheme, nzRotate } = changes;\n\n    if (nzType || nzTwotoneColor || nzSpin || nzTheme) {\n      this.changeIcon2();\n    } else if (nzRotate) {\n      this.handleRotate(this.el.firstChild as SVGElement);\n    } else {\n      this._setSVGElement(this.iconService.createIconfontIcon(`#${this.iconfont}`));\n    }\n  }\n\n  ngOnInit(): void {\n    this.renderer.setAttribute(this.el, 'class', `anticon ${this.el.className}`.trim());\n  }\n\n  /**\n   * If custom content is provided, try to normalize SVG elements.\n   */\n  ngAfterContentChecked(): void {\n    if (!this.type) {\n      const children = this.el.children;\n      let length = children.length;\n      if (!this.type && children.length) {\n        while (length--) {\n          const child = children[length];\n          if (child.tagName.toLowerCase() === 'svg') {\n            this.iconService.normalizeSvgElement(child as SVGElement);\n          }\n        }\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n  }\n\n  /**\n   * Replacement of `changeIcon` for more modifications.\n   */\n  private changeIcon2(): void {\n    this.setClassName();\n\n    // The Angular zone is left deliberately before the SVG is set\n    // since `_changeIcon` spawns asynchronous tasks as promise and\n    // HTTP calls. This is used to reduce the number of change detections\n    // while the icon is being loaded dynamically.\n    this.ngZone.runOutsideAngular(() => {\n      from(this._changeIcon())\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: svgOrRemove => {\n            // Get back into the Angular zone after completing all the tasks.\n            // Since we manually run change detection locally, we have to re-enter\n            // the zone because the change detection might also be run on other local\n            // components, leading them to handle template functions outside of the Angular zone.\n            this.ngZone.run(() => {\n              // The _changeIcon method would call Renderer to remove the element of the old icon,\n              // which would call `markElementAsRemoved` eventually,\n              // so we should call `detectChanges` to tell Angular remove the DOM node.\n              // #7186\n              this.changeDetectorRef.detectChanges();\n\n              if (svgOrRemove) {\n                this.setSVGData(svgOrRemove);\n                this.handleSpin(svgOrRemove);\n                this.handleRotate(svgOrRemove);\n              }\n            });\n          },\n          error: warn\n        });\n    });\n  }\n\n  private handleSpin(svg: SVGElement): void {\n    if (this.spin || this.type === 'loading') {\n      this.renderer.addClass(svg, 'anticon-spin');\n    } else {\n      this.renderer.removeClass(svg, 'anticon-spin');\n    }\n  }\n\n  private handleRotate(svg: SVGElement): void {\n    if (this.nzRotate) {\n      this.renderer.setAttribute(svg, 'style', `transform: rotate(${this.nzRotate}deg)`);\n    } else {\n      this.renderer.removeAttribute(svg, 'style');\n    }\n  }\n\n  private setClassName(): void {\n    if (this.cacheClassName) {\n      this.renderer.removeClass(this.el, this.cacheClassName);\n    }\n    this.cacheClassName = `anticon-${this.type}`;\n    this.renderer.addClass(this.el, this.cacheClassName);\n  }\n\n  private setSVGData(svg: SVGElement): void {\n    this.renderer.setAttribute(svg, 'data-icon', this.type as string);\n    this.renderer.setAttribute(svg, 'aria-hidden', 'true');\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { EnvironmentProviders, makeEnvironmentProviders, Provider } from '@angular/core';\n\nimport { IconDefinition } from '@ant-design/icons-angular';\n\nimport { NZ_ICONS, NZ_ICONS_PATCH, NzIconPatchService } from './icon.service';\n\n/**\n * Provide icon definitions for NzIcon in root\n *\n * @param icons Icon definitions\n */\nexport const provideNzIcons = (icons: IconDefinition[]): EnvironmentProviders => {\n  return makeEnvironmentProviders([\n    {\n      provide: NZ_ICONS,\n      useValue: icons\n    }\n  ]);\n};\n\n/**\n * Provide icon definitions for NzIcon in feature module or standalone component\n *\n * @param icons Icon definitions\n */\nexport const provideNzIconsPatch = (icons: IconDefinition[]): Provider[] => {\n  return [\n    NzIconPatchService,\n    {\n      provide: NZ_ICONS_PATCH,\n      useValue: icons\n    }\n  ];\n};\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { IconDefinition } from '@ant-design/icons-angular';\n\nimport { NzIconDirective } from './icon.directive';\nimport { provideNzIcons, provideNzIconsPatch } from './provide-icons';\n\n@NgModule({\n  imports: [NzIconDirective],\n  exports: [NzIconDirective]\n})\nexport class NzIconModule {\n  static forRoot(icons: IconDefinition[]): ModuleWithProviders<NzIconModule> {\n    return {\n      ngModule: NzIconModule,\n      providers: [provideNzIcons(icons)]\n    };\n  }\n\n  static forChild(icons: IconDefinition[]): ModuleWithProviders<NzIconModule> {\n    return {\n      ngModule: NzIconModule,\n      providers: [provideNzIconsPatch(icons)]\n    };\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './icon.module';\nexport * from './icon.directive';\nexport * from './icon.service';\nexport * from './icons';\nexport * from './provide-icons';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.NzIconService"],"mappings":"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"}